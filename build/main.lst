ARM GAS  /var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.rodata.main.str1.4,"aMS",%progbits,1
  21              		.align	2
  22              	.LC0:
  23 0000 2D2D2D2D 		.ascii	"---------------------------------------\015\012\000"
  23      2D2D2D2D 
  23      2D2D2D2D 
  23      2D2D2D2D 
  23      2D2D2D2D 
  24 002a 0000     		.align	2
  25              	.LC1:
  26 002c 53797374 		.ascii	"System Boot: AML-BVAT Data Logger\015\012\000"
  26      656D2042 
  26      6F6F743A 
  26      20414D4C 
  26      2D425641 
  27              		.align	2
  28              	.LC2:
  29 0050 53797374 		.ascii	"System ready. Press USER button to start/stop loggi"
  29      656D2072 
  29      65616479 
  29      2E205072 
  29      65737320 
  30 0083 6E672E0D 		.ascii	"ng.\015\012\000"
  30      0A00
  31 0089 000000   		.align	2
  32              	.LC3:
  33 008c 43524954 		.ascii	"CRITICAL ERROR: A sensor failed to initialize. Halt"
  33      4943414C 
  33      20455252 
  33      4F523A20 
  33      41207365 
  34 00bf 696E672E 		.ascii	"ing.\015\012\000"
  34      0D0A00
  35              		.section	.text.main,"ax",%progbits
  36              		.align	1
  37              		.global	main
  38              		.syntax unified
  39              		.thumb
ARM GAS  /var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s 			page 2


  40              		.thumb_func
  42              	main:
  43              	.LFB137:
   1:Core/Src/main.c **** /**
   2:Core/Src/main.c ****   ******************************************************************************
   3:Core/Src/main.c ****   * @file           : main.c
   4:Core/Src/main.c ****   * @brief          : Main program body for the final AML-BVAT Data Logger.
   5:Core/Src/main.c ****   ******************************************************************************
   6:Core/Src/main.c ****   */
   7:Core/Src/main.c **** 
   8:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
   9:Core/Src/main.c **** #include "main.h"
  10:Core/Src/main.c **** #include "aml_hal.h"
  11:Core/Src/main.c **** #include "gpio_handler.h"
  12:Core/Src/main.c **** #include "uart_handler.h"
  13:Core/Src/main.c **** #include "i2c_handler.h"
  14:Core/Src/main.c **** #include "gps_handler.h"
  15:Core/Src/main.c **** #include "command_handler.h"
  16:Core/Src/main.c **** #include <stdbool.h>
  17:Core/Src/main.c **** 
  18:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  19:Core/Src/main.c **** // All global state variables are managed in their respective handler modules.
  20:Core/Src/main.c **** 
  21:Core/Src/main.c **** /**
  22:Core/Src/main.c ****   * @brief  The application entry point.
  23:Core/Src/main.c ****   * @retval int
  24:Core/Src/main.c ****   */
  25:Core/Src/main.c **** int main(void)
  26:Core/Src/main.c **** {
  44              		.loc 1 26 1 view -0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48 0000 10B5     		push	{r4, lr}
  49              	.LCFI0:
  50              		.cfi_def_cfa_offset 8
  51              		.cfi_offset 4, -8
  52              		.cfi_offset 14, -4
  27:Core/Src/main.c ****   bool system_ready = false;
  53              		.loc 1 27 3 view .LVU1
  54              	.LVL0:
  28:Core/Src/main.c **** 
  29:Core/Src/main.c ****   // --- 1. Core System & Peripheral Initialization ---
  30:Core/Src/main.c ****   AML_Init();             // Initializes HAL, Clocks, all peripherals (GPIO, UARTs, I2C, Timers).
  55              		.loc 1 30 3 view .LVU2
  56 0002 FFF7FEFF 		bl	AML_Init
  57              	.LVL1:
  31:Core/Src/main.c ****   BuiltinLED_Init();
  58              		.loc 1 31 3 view .LVU3
  59 0006 FFF7FEFF 		bl	BuiltinLED_Init
  60              	.LVL2:
  32:Core/Src/main.c ****   BuiltinPushButton_Init(); // Initializes the hardware and software for the user button interrupt.
  61              		.loc 1 32 3 view .LVU4
  62 000a FFF7FEFF 		bl	BuiltinPushButton_Init
  63              	.LVL3:
  33:Core/Src/main.c ****   CommandHandler_Init();    // Initializes timers/states needed by the command handler.
  64              		.loc 1 33 3 view .LVU5
ARM GAS  /var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s 			page 3


  65 000e FFF7FEFF 		bl	CommandHandler_Init
  66              	.LVL4:
  34:Core/Src/main.c ****   GPS_Init();
  67              		.loc 1 34 3 view .LVU6
  68 0012 FFF7FEFF 		bl	GPS_Init
  69              	.LVL5:
  35:Core/Src/main.c ****   // --- 2. Startup Messaging & Sensor Verification ---
  36:Core/Src/main.c ****   HAL_Delay(100);
  70              		.loc 1 36 3 view .LVU7
  71 0016 6420     		movs	r0, #100
  72 0018 FFF7FEFF 		bl	HAL_Delay
  73              	.LVL6:
  37:Core/Src/main.c ****   WriteUART_Blocking("---------------------------------------\r\n");
  74              		.loc 1 37 3 view .LVU8
  75 001c 144C     		ldr	r4, .L8
  76 001e 2046     		mov	r0, r4
  77 0020 FFF7FEFF 		bl	WriteUART_Blocking
  78              	.LVL7:
  38:Core/Src/main.c ****   WriteUART_Blocking("System Boot: AML-BVAT Data Logger\r\n");
  79              		.loc 1 38 3 view .LVU9
  80 0024 1348     		ldr	r0, .L8+4
  81 0026 FFF7FEFF 		bl	WriteUART_Blocking
  82              	.LVL8:
  39:Core/Src/main.c ****   WriteUART_Blocking("---------------------------------------\r\n");
  83              		.loc 1 39 3 view .LVU10
  84 002a 2046     		mov	r0, r4
  85 002c FFF7FEFF 		bl	WriteUART_Blocking
  86              	.LVL9:
  40:Core/Src/main.c **** 
  41:Core/Src/main.c ****   if (BVAT_I2C_Init()) { // This function pings the sensor and enables it.
  87              		.loc 1 41 3 view .LVU11
  88              		.loc 1 41 7 is_stmt 0 view .LVU12
  89 0030 FFF7FEFF 		bl	BVAT_I2C_Init
  90              	.LVL10:
  91              		.loc 1 41 6 discriminator 1 view .LVU13
  92 0034 0446     		mov	r4, r0
  93 0036 68B9     		cbnz	r0, .L7
  94              	.L2:
  95              	.LVL11:
  42:Core/Src/main.c ****       if (Verify_LIS3DH_Sensor()) { // This function reads registers to confirm configuration.
  43:Core/Src/main.c ****           // Both I2C init and sensor verification passed.
  44:Core/Src/main.c ****           // Now check GPS. Check_GPS_Status will handle its own messaging.
  45:Core/Src/main.c ****           Check_GPS_Status();  // Try it, but don't block
  46:Core/Src/main.c ****           system_ready = true; // Always allow logging even without GPS fix
  47:Core/Src/main.c ****       }
  48:Core/Src/main.c ****   }
  49:Core/Src/main.c ****   
  50:Core/Src/main.c ****   // --- 3. Final Setup Indication ---
  51:Core/Src/main.c ****   indicate_setup_with_blinks(3, 100); // Visual cue that all checks are complete.
  96              		.loc 1 51 3 is_stmt 1 view .LVU14
  97 0038 6421     		movs	r1, #100
  98 003a 0320     		movs	r0, #3
  99 003c FFF7FEFF 		bl	indicate_setup_with_blinks
 100              	.LVL12:
  52:Core/Src/main.c **** 
  53:Core/Src/main.c ****   if (system_ready) {
 101              		.loc 1 53 3 view .LVU15
ARM GAS  /var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s 			page 4


 102              		.loc 1 53 6 is_stmt 0 view .LVU16
 103 0040 84B1     		cbz	r4, .L3
  54:Core/Src/main.c ****     WriteUART_Blocking("System ready. Press USER button to start/stop logging.\r\n");
 104              		.loc 1 54 5 is_stmt 1 view .LVU17
 105 0042 0D48     		ldr	r0, .L8+8
 106 0044 FFF7FEFF 		bl	WriteUART_Blocking
 107              	.LVL13:
 108              	.L4:
  55:Core/Src/main.c ****   } else {
  56:Core/Src/main.c ****     WriteUART_Blocking("CRITICAL ERROR: A sensor failed to initialize. Halting.\r\n");
  57:Core/Src/main.c ****     Error_Handler(); // Halt if sensors are not working.
  58:Core/Src/main.c ****   }
  59:Core/Src/main.c ****   WriteUART_Blocking("---------------------------------------\r\n");
 109              		.loc 1 59 3 view .LVU18
 110 0048 0948     		ldr	r0, .L8
 111 004a FFF7FEFF 		bl	WriteUART_Blocking
 112              	.LVL14:
 113              	.L5:
  60:Core/Src/main.c ****   
  61:Core/Src/main.c ****   // --- 4. Main Execution Loop ---
  62:Core/Src/main.c ****   while (1)
 114              		.loc 1 62 3 view .LVU19
  63:Core/Src/main.c ****   {
  64:Core/Src/main.c ****     // All periodic logic is now handled by this single function.
  65:Core/Src/main.c ****     // It contains the state machine for idle vs. logging states.
  66:Core/Src/main.c ****     measure_loop();
 115              		.loc 1 66 5 discriminator 1 view .LVU20
 116 004e FFF7FEFF 		bl	measure_loop
 117              	.LVL15:
  62:Core/Src/main.c ****   {
 118              		.loc 1 62 9 view .LVU21
 119 0052 FCE7     		b	.L5
 120              	.LVL16:
 121              	.L7:
  42:Core/Src/main.c ****           // Both I2C init and sensor verification passed.
 122              		.loc 1 42 7 view .LVU22
  42:Core/Src/main.c ****           // Both I2C init and sensor verification passed.
 123              		.loc 1 42 11 is_stmt 0 view .LVU23
 124 0054 FFF7FEFF 		bl	Verify_LIS3DH_Sensor
 125              	.LVL17:
  42:Core/Src/main.c ****           // Both I2C init and sensor verification passed.
 126              		.loc 1 42 10 discriminator 1 view .LVU24
 127 0058 0446     		mov	r4, r0
 128 005a 0028     		cmp	r0, #0
 129 005c ECD0     		beq	.L2
  45:Core/Src/main.c ****           system_ready = true; // Always allow logging even without GPS fix
 130              		.loc 1 45 11 is_stmt 1 view .LVU25
 131 005e FFF7FEFF 		bl	Check_GPS_Status
 132              	.LVL18:
  46:Core/Src/main.c ****       }
 133              		.loc 1 46 11 view .LVU26
 134 0062 E9E7     		b	.L2
 135              	.LVL19:
 136              	.L3:
  56:Core/Src/main.c ****     Error_Handler(); // Halt if sensors are not working.
 137              		.loc 1 56 5 view .LVU27
 138 0064 0548     		ldr	r0, .L8+12
ARM GAS  /var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s 			page 5


 139 0066 FFF7FEFF 		bl	WriteUART_Blocking
 140              	.LVL20:
  57:Core/Src/main.c ****   }
 141              		.loc 1 57 5 view .LVU28
 142 006a FFF7FEFF 		bl	Error_Handler
 143              	.LVL21:
 144 006e EBE7     		b	.L4
 145              	.L9:
 146              		.align	2
 147              	.L8:
 148 0070 00000000 		.word	.LC0
 149 0074 2C000000 		.word	.LC1
 150 0078 50000000 		.word	.LC2
 151 007c 8C000000 		.word	.LC3
 152              		.cfi_endproc
 153              	.LFE137:
 155              		.text
 156              	.Letext0:
 157              		.file 2 "/opt/arm-gnu-toolchain/arm-none-eabi/include/machine/_default_types.h"
 158              		.file 3 "/opt/arm-gnu-toolchain/arm-none-eabi/include/sys/_stdint.h"
 159              		.file 4 "Core/Src/command_handler/command_handler.h"
 160              		.file 5 "Core/Src/library/aml_hal.h"
 161              		.file 6 "Core/Src/i2c_handler/i2c_handler.h"
 162              		.file 7 "Core/Src/gpio_handler/gpio_handler.h"
 163              		.file 8 "Core/Src/uart_handler/uart_handler.h"
 164              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 165              		.file 10 "Core/Src/gps_handler/gps_handler.h"
ARM GAS  /var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s 			page 6


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s:21     .rodata.main.str1.4:00000000 $d
/var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s:36     .text.main:00000000 $t
/var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s:42     .text.main:00000000 main
/var/folders/t0/g2s8z9xd75s2k51g_zcxx3qc0000gn/T//ccvYFUml.s:148    .text.main:00000070 $d

UNDEFINED SYMBOLS
AML_Init
BuiltinLED_Init
BuiltinPushButton_Init
CommandHandler_Init
GPS_Init
HAL_Delay
WriteUART_Blocking
BVAT_I2C_Init
indicate_setup_with_blinks
measure_loop
Verify_LIS3DH_Sensor
Check_GPS_Status
Error_Handler
